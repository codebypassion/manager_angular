.spinner_Set{
    position: absolute;
    top: 50%;
    z-index: 1000;
    left: 50%;
}
.minHeight100vh {
    height: 94vh;
    overflow: hidden;
}
/* .overflowVisible {
    overflow: scroll !important;
} */
.logo_style{
    width: 30px;
    box-shadow: 0px 0px 10px #F7AC39;
    border-radius: 50%;
}
.leftMargin0 {
    margin-left: 55px !important;
}

.example-spacer {
    flex: 1 1 auto;
}
.menutoggleBtn {
    display: none;
}
.sidebarListHeight50 {
    height: 50px !important;
}

.nav_deg{
    width: 56px;
    border-right: none;
}
.mainworkingdiv{
    background-color: white;
    border-top-left-radius: 10px;
    margin-top: 10px;
    box-shadow: 0px 2px 10px #3e5fce63;
    z-index: 10;
    /* height: auto; */
}
.mat-toolbar-row {
    height: auto;
    padding-top: 6px;
}

.bgcolor{
    background-color: #f5f5f5;
}

.mat-toolbar {
    min-height: auto;
}
@media (max-width: 768px) {
    .leftMargin0 {
        margin-left: 0px !important;
    }
    .menutoggleBtn {
        display: block;
    }
    .mainworkingdiv{
        z-index: 0;
    }
}
.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}
.example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
}
h1.example-app-name {
    margin-left: 8px;
}
.example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
}
.example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
}
